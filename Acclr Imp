#include <nRF24L01.h>
#include <printf.h>
#include <RF24.h>
#include <RF24_config.h>
//#include <TimerOne.h>

// Define radio pins
#define RF_CE 7
#define RF_CSN 8

// Radio pipe addresses for the 2 nodes to communicate
const uint64_t pipes[2] = {
  0xF0F0F0F0C3LL,
  0xF0F0F0F0D2LL
};

// Data size we are sending
const int dataSize = 7;

// Start radio
RF24 radio(RF_CE, RF_CSN);

// Char array for data to be sent out
char radioTX[7];

int AcclrPin = 2;

//unsigned long int timeBuff[10];
double magBuff[50];

unsigned long int vibCmpr0;
unsigned long int vibCmpr1;
unsigned long int peak1;
unsigned long int peak0;
unsigned long int time0;
unsigned long int time1;
bool peak0Complete;
bool peak1Complete;

int numOfReads = 50;
int count;

int freq;

char id = '2';


void setup() {

  radioTX[0] = id;
  radioTX[1] = ',';

    // Start radio with dnamic payloads.
  // Write to pipe 0, read on pipe 1.
  radio.begin();
  radio.enableDynamicPayloads();
  radio.openWritingPipe(pipes[0]);
  radio.openReadingPipe(1, pipes[1]);
  radio.stopListening();
  
  Serial.begin(9600);
}

void loop() {

    for (count = 0;count< numOfReads;count++){   
        magBuff[count] = analogRead(AcclrPin);
    }
               
    for (count = 0;count<numOfReads;count++){
        //Serial.println("Loop: " + count);
        //Serial.println(magBuff[count]);
        //Serial.print(" ,   ");
        //Serial.println(timeBuff[count]);
        //Transmit data
        dtostrf(magBuff[count], 5, 0, &radioTX[2]);
        radio.write(&radioTX, dataSize);
    } 
}

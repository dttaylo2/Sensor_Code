#include <nRF24L01.h>
#include <RF24.h>
#include <RF24_config.h>

// Define radio pins
#define RF_CE 7
#define RF_CSN 8

// Radio pipe addresses for the 2 nodes to communicate
const uint64_t pipes[2] = {
  0xF0F0F0F0C3LL,
  0xF0F0F0F0D2LL
};

// Start radio
RF24 radio(RF_CE, RF_CSN);

const int BEAR_ACC_PIN = 0;
const int TOOL_ACC_PIN = 2;
const char RF_ID = '2';
const int DATA_SIZE = 15;
double magBuff_tool[50];
double magBuff_bear[50];
int numOfReads = 50;
char radioTX[14];

void setup() {
  radioTX[0] = RF_ID;
  radioTX[1] = ',';
  radioTX[2] = ' ';


    // Start radio with dnamic payloads.
  // Write to pipe 0, read on pipe 1.
  radio.begin();
  radio.enableDynamicPayloads();
  radio.openWritingPipe(pipes[0]);
  radio.openReadingPipe(1, pipes[1]);
  radio.stopListening();
  
  Serial.begin(9600);
}

void loop() {

    for (int count = 0; count < numOfReads; count++)
        magBuff_tool[count] = analogRead(TOOL_ACC_PIN);

    for (int count = 0; count < numOfReads; count++)
        magBuff_bear[count] = analogRead(BEAR_ACC_PIN);
               
    for (int count = 0; count < numOfReads; count++){      
        dtostrf(magBuff_tool[count], 5, 0, &radioTX[3]);  
        radioTX[8] = ',';
        radioTX[9] = ' ';    
        dtostrf(magBuff_bear[count], 5, 0, &radioTX[10]);                
        radio.write(&radioTX, DATA_SIZE);
    }

      //Serial.println(analogRead(TOOL_ACC_PIN));
}
